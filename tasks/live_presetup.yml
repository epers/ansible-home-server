---
# this tasklist is intended to be run against a debian livecd enviroment
# requires manual preparation - run "apt update && apt install -y openssh-server && systemctl start ssh
# TODO: roll my own livecd with ssh and ansible user already setup

- name: 'Make sure we are using the default "user" account provided by the livecd'
  ansible.builtin.set_fact:
    ansible_ssh_user: 'user'
    ansible_ssh_pass: 'live'
    ansible_sudo_pass: 'live'
    ansible_user: 'user'

- name: 'Gather facts'
  ansible.builtin.gather_facts:

- name: 'Create {{ ansible_user }} group'
  ansible.builtin.group:
    name: '{{ ansible_user }}'

- name: 'Create {{ ansible_user }} user'
  ansible.builtin.user:
    name: '{{ ansible_user }}'
    group: '{{ ansible_user }}'

- name: 'Set authorized key for {{ ansible_user }} from host variable'
  ansible.posix.authorized_key:
    user: '{{ ansible_user }}'
    state: present
    key: '{{ ansible_ssh_key }}'

- name: 'Set passwordless sudo for {{ ansible_user }} user [/etc/sudoers.d/{{ ansible_user }}]'
  ansible.builtin.lineinfile:
    path: '/etc/sudoers.d/{{ ansible_user }}'
    line: '{{ ansible_user }} ALL=(ALL) NOPASSWD: ALL'
    create: true

- name: 'Make sure we are using {{ ansible_user }} user'
  ansible.builtin.set_fact:
    ansible_ssh_user: '{{ ansible_user }}'
    ansible_ssh_pass: ''
    ansible_sudo_pass: ''
    ansible_user: '{{ ansible_user }}'

- name: 'Install ansible prerequesites'
  ansible.builtin.apt:
    name:
      - 'python-apt'
    state: present
    update_cache: yes

- name: 'Remove default sources.list file'
  ansible.builtin.file:
    path: '/etc/apt/sources.list'
    state: absent

- name: 'Add main debian repo'
  ansible.builtin.apt_repository:
    repo: 'deb http://deb.debian.org/debian/ buster main non-free contrib'
    state: present

- name: 'Add buster-backports debian repo'
  ansible.builtin.apt_repository:
    repo: 'deb http://deb.debian.org/debian/ buster-backports main non-free contrib'
    state: present

- name: 'Update apt cache'
  ansible.builtin.apt:
    update_cache: yes

- name: 'Install live enviroment base dependencies'
  ansible.builtin.apt:
    name:
      - 'gdisk'
      - 'debootstrap'
      - 'dkms'
      - 'linux-headers-{{ ansible_kernel }}'

- name: 'Install zfs in the livecd'
  ansible.builtin.apt:
    default_release: buster-backports
    name:
      - zfs-dkms

- name: 'modprobe zfs'
  community.general.modprobe:
    name: 'zfs'
    state: present

- name: 'Install zfs in the livecd'
  ansible.builtin.apt:
    default_release: buster-backports
    name:
      - zfsutils-linux
